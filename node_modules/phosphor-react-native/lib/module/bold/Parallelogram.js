function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const Parallelogram = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "parallelogram-bold__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M248.78 45.14A19.92 19.92 0 0 0 232 36H88.81a20 20 0 0 0-18.24 11.79l-64.8 144A20 20 0 0 0 24 220h143.19a20 20 0 0 0 18.24-11.79l64.8-144a19.9 19.9 0 0 0-1.45-19.07ZM164.6 196H30.2L91.4 60h134.4Z"
}));
export default Parallelogram;
//# sourceMappingURL=Parallelogram.js.map