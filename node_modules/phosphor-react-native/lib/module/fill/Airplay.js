function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const Airplay = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "airplay-fill__svg-icon-phosphor",
  fill: props.color,
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M182.07 210.79A8 8 0 0 1 176 224H80a8 8 0 0 1-6.07-13.21l48-56a8 8 0 0 1 12.15 0ZM208 40H48a24 24 0 0 0-24 24v112a24 24 0 0 0 24 24h12.26a4 4 0 0 0 3-1.4l46.48-54.22a24 24 0 0 1 36.44 0l46.52 54.22a4 4 0 0 0 3 1.4H208a24 24 0 0 0 24-24V64a24 24 0 0 0-24-24Z"
}));
export default Airplay;
//# sourceMappingURL=Airplay.js.map