/* GENERATED FILE */
import React, { useContext, useMemo } from 'react';
import { IconContext } from '../lib';
import bold from '../bold/Magnet';
import duotone from '../duotone/Magnet';
import fill from '../fill/Magnet';
import light from '../light/Magnet';
import regular from '../regular/Magnet';
import thin from '../thin/Magnet';
function Magnet(_ref) {
  let {
    weight,
    color,
    size,
    style,
    mirrored
  } = _ref;
  const {
    color: contextColor = '#000',
    size: contextSize = 24,
    weight: contextWeight = 'regular',
    mirrored: contextMirrored = false,
    style: contextStyle
  } = useContext(IconContext);
  const IconComponent = useMemo(() => {
    const iconWeight = weight ?? contextWeight;
    const weightMap = {
      bold,
      duotone,
      fill,
      light,
      regular,
      thin
    };
    return weightMap[iconWeight];
  }, [weight, contextWeight]);
  const mirroredValue = mirrored ?? contextMirrored;
  return /*#__PURE__*/React.createElement(IconComponent, {
    color: color ?? contextColor,
    size: size ?? contextSize,
    style: [contextStyle, style, {
      ...(mirroredValue && {
        transform: [{
          scaleX: -1
        }]
      })
    }]
  });
}
export default Magnet;
//# sourceMappingURL=Magnet.js.map