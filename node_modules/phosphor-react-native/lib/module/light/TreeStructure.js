function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const TreeStructure = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "tree-structure-light__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M168 110h48a14 14 0 0 0 14-14V48a14 14 0 0 0-14-14h-48a14 14 0 0 0-14 14v18h-10a30 30 0 0 0-30 30v26H78v-10a14 14 0 0 0-14-14H32a14 14 0 0 0-14 14v32a14 14 0 0 0 14 14h32a14 14 0 0 0 14-14v-10h36v26a30 30 0 0 0 30 30h10v18a14 14 0 0 0 14 14h48a14 14 0 0 0 14-14v-48a14 14 0 0 0-14-14h-48a14 14 0 0 0-14 14v18h-10a18 18 0 0 1-18-18V96a18 18 0 0 1 18-18h10v18a14 14 0 0 0 14 14ZM66 144a2 2 0 0 1-2 2H32a2 2 0 0 1-2-2v-32a2 2 0 0 1 2-2h32a2 2 0 0 1 2 2Zm100 16a2 2 0 0 1 2-2h48a2 2 0 0 1 2 2v48a2 2 0 0 1-2 2h-48a2 2 0 0 1-2-2Zm0-112a2 2 0 0 1 2-2h48a2 2 0 0 1 2 2v48a2 2 0 0 1-2 2h-48a2 2 0 0 1-2-2Z"
}));
export default TreeStructure;
//# sourceMappingURL=TreeStructure.js.map