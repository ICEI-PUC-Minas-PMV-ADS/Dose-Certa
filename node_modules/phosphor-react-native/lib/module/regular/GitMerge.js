function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const GitMerge = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "git-merge__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M208 112a32.06 32.06 0 0 0-31 24h-25a40.19 40.19 0 0 1-32-16L93.69 84.92A32 32 0 1 0 72 87v82a32 32 0 1 0 16 0v-65l19.2 25.6A56.26 56.26 0 0 0 152 152h25a32 32 0 1 0 31-40ZM64 56a16 16 0 1 1 16 16 16 16 0 0 1-16-16Zm32 144a16 16 0 1 1-16-16 16 16 0 0 1 16 16Zm112-40a16 16 0 1 1 16-16 16 16 0 0 1-16 16Z"
}));
export default GitMerge;
//# sourceMappingURL=GitMerge.js.map