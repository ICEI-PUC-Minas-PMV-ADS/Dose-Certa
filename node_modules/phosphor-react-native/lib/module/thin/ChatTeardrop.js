function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const ChatTeardrop = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "chat-teardrop-thin__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M132 28a96.11 96.11 0 0 0-96 96v84.33A11.68 11.68 0 0 0 47.67 220H132a96 96 0 0 0 0-192Zm0 184H47.67a3.67 3.67 0 0 1-3.67-3.67V124a88 88 0 1 1 88 88Z"
}));
export default ChatTeardrop;
//# sourceMappingURL=ChatTeardrop.js.map