function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const Gauge = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "gauge-thin__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M204.23 83.5A107.37 107.37 0 0 0 127.62 52C68.28 52.21 20 101.16 20 161.13V184a12 12 0 0 0 12 12h192a12 12 0 0 0 12-12v-24a107.25 107.25 0 0 0-31.77-76.5ZM228 184a4 4 0 0 1-4 4H111.85l59.38-81.65a4 4 0 1 0-6.46-4.7L102 188H32a4 4 0 0 1-4-4v-22.87a103.42 103.42 0 0 1 .84-13.13H56a4 4 0 0 0 0-8H30.21C39.59 95.66 77.84 61.93 124 60.09V88a4 4 0 0 0 8 0V60.08A100.08 100.08 0 0 1 226 140h-26a4 4 0 0 0 0 8h27.29a101.6 101.6 0 0 1 .71 12Z"
}));
export default Gauge;
//# sourceMappingURL=Gauge.js.map