function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
/* GENERATED FILE */
import * as React from "react";
import Svg, { Path } from "react-native-svg";
const Parallelogram = props => /*#__PURE__*/React.createElement(Svg, _extends({
  className: "parallelogram-thin__svg-icon-phosphor",
  fill: "currentColor",
  viewBox: "0 0 256 256",
  width: props.size,
  height: props.size
}, props), /*#__PURE__*/React.createElement(Path, {
  d: "M242.07 49.48A12 12 0 0 0 232 44H88.81a12 12 0 0 0-11 7.08l-64.8 144A12 12 0 0 0 24 212h143.19a12 12 0 0 0 10.95-7.08l64.8-144a12 12 0 0 0-.87-11.44Zm-6.43 8.16-64.8 144a4 4 0 0 1-3.65 2.36H24a4 4 0 0 1-3.65-5.64l64.8-144A4 4 0 0 1 88.81 52H232a4 4 0 0 1 3.65 5.64Z"
}));
export default Parallelogram;
//# sourceMappingURL=Parallelogram.js.map